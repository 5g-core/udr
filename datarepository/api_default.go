/*
 * Nudr_DataRepository API OpenAPI file
 *
 * Unified Data Repository Service
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package datarepository

import (
	"net/http"

	"github.com/gin-gonic/gin"

	"github.com/5g-core/http_wrapper"
	"github.com/5g-core/openapi"
	"github.com/5g-core/udr/logger"
	"github.com/5g-core/udr/util"
)

func sendResponse(c *gin.Context, rsp *http_wrapper.Response) {
	for k, v := range rsp.Header {
		// TODO: concatenate all values
		c.Header(k, v[0])
	}
	serializedBody, err := openapi.Serialize(rsp.Body, "application/json")
	if err != nil {
		logger.DataRepoLog.Errorf("Serialize Response Body error: %+v", err)
		pd := util.ProblemDetailsSystemFailure(err.Error())
		c.JSON(http.StatusInternalServerError, pd)
	} else {
		c.Data(rsp.Status, "application/json", serializedBody)
	}
}

func getDataFromRequestBody(c *gin.Context, data interface{}) error {
	reqBody, err := c.GetRawData()
	if err != nil {
		logger.DataRepoLog.Errorf("Get Request Body error: %+v", err)
		pd := util.ProblemDetailsSystemFailure(err.Error())
		c.JSON(http.StatusInternalServerError, pd)
		return err
	}

	err = openapi.Deserialize(data, reqBody, "application/json")
	if err != nil {
		logger.DataRepoLog.Errorf("Deserialize Request Body error: %+v", err)
		pd := util.ProblemDetailsMalformedReqSyntax(err.Error())
		c.JSON(http.StatusBadRequest, pd)
		return err
	}
	return err
}
